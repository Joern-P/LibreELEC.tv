diff --git a/CMakeLists.txt b/CMakeLists.txt
index 572e99b481..741844427f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -55,6 +55,7 @@ option(ENABLE_AIRTUNES    "Enable AirTunes support?" ON)
 option(ENABLE_AIRTUNES    "Enable AirTunes support?" ON)
 option(ENABLE_OPTICAL     "Enable optical support?" ON)
 option(ENABLE_PYTHON      "Enable python support?" ON)
+option(ENABLE_TCMALLOC    "Enable TCMalloc support?" ON)
 # use ffmpeg from depends or system
 option(ENABLE_INTERNAL_FFMPEG "Enable internal ffmpeg?" OFF)
 if(UNIX)
@@ -169,6 +170,7 @@ set(optional_deps Alsa
                   Python
                   SmbClient
                   Sndio
+                  TCMalloc
                   UDEV
                   Udfread
                   XSLT
diff --git a/cmake/modules/FindTCMalloc.cmake b/cmake/modules/FindTCMalloc.cmake
new file mode 100644
index 0000000000..04f1dc3a5f
--- /dev/null
+++ b/cmake/modules/FindTCMalloc.cmake
@@ -0,0 +1,49 @@
+
+# Copyright (c)      2014 Thomas Heller
+# Copyright (c) 2007-2012 Hartmut Kaiser
+# Copyright (c) 2010-2011 Matt Anderson
+# Copyright (c) 2011      Bryce Lelbach
+#
+# Distributed under the Boost Software License, Version 1.0. (See accompanying
+# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
+
+if(ENABLE_TCMALLOC)
+find_package(PkgConfig QUIET)
+pkg_check_modules(PC_TCMALLOC_MINIMAL QUIET libtcmalloc_minimal)
+pkg_check_modules(PC_TCMALLOC QUIET libtcmalloc)
+
+find_path(TCMALLOC_INCLUDE_DIR google/tcmalloc.h
+  HINTS
+    ${TCMALLOC_ROOT} ENV TCMALLOC_ROOT
+    ${PC_TCMALLOC_MINIMAL_INCLUDEDIR}
+    ${PC_TCMALLOC_MINIMAL_INCLUDE_DIRS}
+    ${PC_TCMALLOC_INCLUDEDIR}
+    ${PC_TCMALLOC_INCLUDE_DIRS}
+  PATH_SUFFIXES include)
+
+find_library(TCMALLOC_LIBRARY NAMES tcmalloc_minimal libtcmalloc_minimal tcmalloc libtcmalloc
+  HINTS
+    ${TCMALLOC_ROOT} ENV TCMALLOC_ROOT
+    ${PC_TCMALLOC_MINIMAL_LIBDIR}
+    ${PC_TCMALLOC_MINIMAL_LIBRARY_DIRS}
+    ${PC_TCMALLOC_LIBDIR}
+    ${PC_TCMALLOC_LIBRARY_DIRS}
+  PATH_SUFFIXES lib lib64)
+
+set(TCMALLOC_LIBRARIES ${TCMALLOC_LIBRARY})
+set(TCMALLOC_INCLUDE_DIRS ${TCMALLOC_INCLUDE_DIR})
+
+find_package_handle_standard_args(TCMalloc DEFAULT_MSG
+  TCMALLOC_LIBRARY TCMALLOC_INCLUDE_DIR)
+
+get_property(_type CACHE TCMALLOC_ROOT PROPERTY TYPE)
+if(_type)
+  set_property(CACHE TCMALLOC_ROOT PROPERTY ADVANCED 1)
+  if("x${_type}" STREQUAL "xUNINITIALIZED")
+    set_property(CACHE TCMALLOC_ROOT PROPERTY TYPE PATH)
+  endif()
+endif()
+
+mark_as_advanced(TCMALLOC_ROOT TCMALLOC_LIBRARY TCMALLOC_INCLUDE_DIR)
+
+endif()

