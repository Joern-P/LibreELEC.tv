From 2944adcf9d620d42720cdad79ea65766c2610cf7 Mon Sep 17 00:00:00 2001
From: Fabrice CARUSO <fabrice.caruso@free.fr>
Date: Fri, 16 Aug 2019 11:17:03 +0200
Subject: [PATCH] Avoid too many reloadings of SVGs by fixing SVG size
 calculation, always based on height -> Reloads only if new height > prev
 height.

---
 es-core/src/resources/TextureData.cpp        | 14 ++++++---
 es-core/src/resources/TextureDataManager.cpp |  6 ++--
 es-core/src/resources/TextureDataManager.h   |  2 +-
 es-core/src/resources/TextureResource.cpp    | 31 +++++++++++---------
 4 files changed, 32 insertions(+), 21 deletions(-)

diff --git a/es-core/src/resources/TextureData.cpp b/es-core/src/resources/TextureData.cpp
index f493a91c4..b21073f73 100644
--- a/es-core/src/resources/TextureData.cpp
+++ b/es-core/src/resources/TextureData.cpp
@@ -53,6 +53,9 @@ bool TextureData::initSVGFromMemory(const unsigned char* fileData, size_t length
 		return false;
 	}
 
+	if (svgImage->width == 0 || svgImage->height == 0)
+		return false;
+
 	// We want to rasterise this texture at a specific resolution. If the source size
 	// variables are set then use them otherwise set them from the parsed file
 	if ((mSourceWidth == 0.0f) && (mSourceHeight == 0.0f))
@@ -60,8 +63,11 @@ bool TextureData::initSVGFromMemory(const unsigned char* fileData, size_t length
 		mSourceWidth = svgImage->width;
 		mSourceHeight = svgImage->height;
 	}
-	mWidth = (size_t)Math::round(mSourceWidth);
-	mHeight = (size_t)Math::round(mSourceHeight);
+	else
+		mSourceWidth = (mSourceHeight * svgImage->width) / svgImage->height; // FCA : Always compute width using source aspect ratio
+
+	mWidth = (int) mSourceWidth;
+	mHeight = (int) mSourceHeight;
 
 	if (mWidth == 0)
 	{
@@ -239,8 +245,8 @@ float TextureData::sourceHeight()
 void TextureData::setSourceSize(float width, float height)
 {
 	if (mScalable)
-	{
-		if ((mSourceWidth != width) || (mSourceHeight != height))
+	{	
+		if (mSourceHeight < height)
 		{
 			mSourceWidth = width;
 			mSourceHeight = height;
d
